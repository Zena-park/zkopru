/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from 'bn.js'
import { Contract, ContractOptions } from 'web3-eth-contract'
import { EventLog } from 'web3-core'
import { EventEmitter } from 'events'
import { ContractEvent, Callback, TransactionObject, BlockType } from './types'

interface EventOptions {
  filter?: object
  fromBlock?: BlockType
  topics?: string[]
}

export class IL2RewardVault extends Contract {
  constructor(jsonInterface: any[], address?: string, options?: ContractOptions)

  clone(): IL2RewardVault

  methods: {
    setTON(_ton: string): TransactionObject<void>

    setWTON(_wton: string): TransactionObject<void>

    approveTON(_to: string, _amount: number | string): TransactionObject<void>

    approveWTON(_to: string, _amount: number | string): TransactionObject<void>

    approveERC20(
      _token: string,
      _to: string,
      _amount: number | string,
    ): TransactionObject<void>

    claimTON(_to: string, _amount: number | string): TransactionObject<void>

    claimWTON(_to: string, _amount: number | string): TransactionObject<void>

    claimERC20(
      _token: string,
      _to: string,
      _amount: number | string,
    ): TransactionObject<void>
  }

  events: {
    allEvents: (options?: EventOptions, cb?: Callback<EventLog>) => EventEmitter
  }
}
